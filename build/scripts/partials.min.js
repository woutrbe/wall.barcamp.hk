(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('jobs-detail.html',
    '<div class="job-detail">\n' +
    '	<job job="job" class="job-container"></job>\n' +
    '</div>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('jobs-list.html',
    '<div class="jobs" masonry infinite-scroll>\n' +
    '	<job ng-repeat="job in jobs" job="job" class="job-container"></job>\n' +
    '</div>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('directives/job/job.html',
    '<div class="job {{ type }}" ng-class="{ready: !editable}">\n' +
    '	<div class="job__toolbar" ng-show="!editable && toolbar">\n' +
    '		<ul>\n' +
    '			<li><a href="{{ mailLink }}" title="Mail this job"><i class="fa fa-envelope"></i></a></li>\n' +
    '			<li><a href="{{ twitterLink }}" target="_blank" title="Tweet this job"><i class="fa fa-twitter"></i></a></li>\n' +
    '			<li><a ng-click="trash()" title=""><i class="fa fa-trash-o"></i></a></li>\n' +
    '			<li><a ng-click="flag()" title=""><i class="fa fa-flag"></i></a></li>\n' +
    '		</ul>\n' +
    '	</div>\n' +
    '\n' +
    '	<div class="job__inner">\n' +
    '		<div ng-show="editable">\n' +
    '			<menu-select selected-menu="selectedMenu"></menu-select>\n' +
    '			<textarea class="job__input" cols="3" rows="3" maxlength="{{ selectedMenu.length }}" ng-model="jobInput" ng-trim="false" msd-elastic="\\n">Enter your post here</textarea>\n' +
    '\n' +
    '			<span class="job__chars">{{ maxChars - jobInput.length }} characters remaining</span>\n' +
    '\n' +
    '			<div class="job__post-options">\n' +
    '				<a class="job__create-btn" ng-click="createPost()">create post</a>\n' +
    '				<a class="job__cancel-btn" ng-click="cancelPost()">cancel</a>\n' +
    '			</div>\n' +
    '\n' +
    '			<a href="" class="jobs__format-tip" ng-mouseover="showTips()" ng-mouseout="hideTips()">?</a>\n' +
    '			<div class="job__format-tips" ng-class="{expanded: expanded}">\n' +
    '				FORMATTING TIPS\n' +
    '				<br><br>\n' +
    '				Type *bold* to get -> <strong>bold</strong>\n' +
    '				<br>\n' +
    '				Type _underline_ to get -> <u>underline</u>\n' +
    '				<br>\n' +
    '				Type +italic+ to get -> <i>italic</i>\n' +
    '				<br><br>\n' +
    '				Any email address and URLs entered will automatically be made clickable\n' +
    '			</div>\n' +
    '		</div>\n' +
    '		<div ng-show="!editable">\n' +
    '			<div class="job__body">\n' +
    '				{{ content }}\n' +
    '			</div>\n' +
    '\n' +
    '			<span class="job__date">Posted on {{ timestamp | date : "MMM d \'at\' HH:mm" }}</span>\n' +
    '		</div>\n' +
    '		<div ng-show="removeable" class="job__overlay">\n' +
    '			<div class="inner">\n' +
    '				<p>{{ removeContent }}</p>\n' +
    '\n' +
    '				<a class="job__create-btn" ng-click="confirmRemove()" ng-show="!removeFailed">remove post</a>\n' +
    '				<a class="job__cancel-btn" ng-click="cancelRemove()">cancel</a>\n' +
    '			</div>\n' +
    '		</div>\n' +
    '		<div ng-show="flagable" class="job__overlay">\n' +
    '			<div class="inner">\n' +
    '				<p>{{ flagContent }}</p>\n' +
    '\n' +
    '				<a class="job__create-btn" ng-click="confirmFlag()" ng-show="!flagFailed">flag post</a>\n' +
    '				<a class="job__cancel-btn" ng-click="cancelFlag()" ng-show="!flagged">cancel</a>\n' +
    '			</div>\n' +
    '		</div>\n' +
    '	</div>\n' +
    '</div>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('directives/login/login.html',
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('directives/menu/menu.html',
    '<ul class="navigation">\n' +
    '	<li ng-repeat="link in links">\n' +
    '		<a href="filter/{{ link.safeLink }}" ng-mouseover="mouseoverHandler($event, link.color)" ng-mouseout="mouseoutHandler($event)">{{ link.link }}</a>\n' +
    '	</li>\n' +
    '</ul>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('directives/menu-select/menu-select.html',
    '<select ng-options="link as link.link for link in links"\n' +
    '		ng-model="selectedLink"\n' +
    '		ng-change="update()">\n' +
    '</select>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/angular-elastic/index.html',
    '<!DOCTYPE html>\n' +
    '<html lang="en-gb" data-ng-app="elasticDemo" id="ng-app">\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '  <title>Angular Elastic</title>\n' +
    '  <meta name="viewport" content="width=device-width">\n' +
    '  <link rel="stylesheet" href="//necolas.github.io/normalize.css/2.1.1/normalize.css">\n' +
    '  <style>\n' +
    '    html {\n' +
    '      background: #e7f3ff;\n' +
    '      color: #1c000e;\n' +
    '      text-shadow: 0 1px 0 #fff;\n' +
    '    }\n' +
    '    body {\n' +
    '      margin: 8px auto;\n' +
    '      max-width: 90%;\n' +
    '      width: 480px;\n' +
    '    }\n' +
    '    h1 {\n' +
    '      margin: 0 0 8px;\n' +
    '      font-weight: normal;\n' +
    '      font-size: 30px;\n' +
    '    }\n' +
    '    a {\n' +
    '      color: #0074e7;\n' +
    '      text-decoration: none;\n' +
    '      -webkit-transition: all 250ms ease-in-out;\n' +
    '         -moz-transition: all 250ms ease-in-out;\n' +
    '           -o-transition: all 250ms ease-in-out;\n' +
    '              transition: all 250ms ease-in-out;\n' +
    '    }\n' +
    '    a:hover,\n' +
    '    a:focus,\n' +
    '    a:active {\n' +
    '      color: #0067ce;\n' +
    '      -webkit-transition: none;\n' +
    '         -moz-transition: none;\n' +
    '           -o-transition: none;\n' +
    '              transition: none;\n' +
    '    }\n' +
    '    textarea {\n' +
    '      padding: 10px;\n' +
    '      width: 300px;\n' +
    '      max-width: 90%;\n' +
    '    }\n' +
    '    .animate:focus {\n' +
    '      -webkit-transition: height 50ms ease-in-out;\n' +
    '         -moz-transition: height 50ms ease-in-out;\n' +
    '           -o-transition: height 50ms ease-in-out;\n' +
    '              transition: height 50ms ease-in-out;\n' +
    '    }\n' +
    '    #first {\n' +
    '      font-size: 30px;\n' +
    '    }\n' +
    '  </style>\n' +
    '</head>\n' +
    '<body data-ng-controller="elasticDemoController">\n' +
    '\n' +
    '  <h1>Angular Elastic</h1>\n' +
    '\n' +
    '  <form data-ng-submit="submit()">\n' +
    '    <p>\n' +
    '      <textarea class="msd-elastic" data-ng-model="foo" id="first" data-ng-show="show" ng-init="show = true"></textarea>\n' +
    '    </p>\n' +
    '    <small data-ng-show="show"><a href data-ng-click="show = false">Hide</a> | </small>\n' +
    '    <small data-ng-show="!show"><a href data-ng-click="show = true">Show</a> | </small>\n' +
    '    <small><a href data-ng-click="foo = \'Model changed\'">Change model</a></small>\n' +
    '    <p>\n' +
    '      <textarea class="animate msd-elastic: \\n;" data-ng-model="bar"></textarea>\n' +
    '    </p>\n' +
    '    <p>\n' +
    '      <input type="submit" value="Submit and reset">\n' +
    '    </p>\n' +
    '  </form>\n' +
    '\n' +
    '  <small>\n' +
    '    <a href="https://github.com/monospaced/angular-elastic">https://github.com/monospaced/angular-elastic</a> <br>\n' +
    '    <a href="http://monospaced.github.io/">Monospaced Labs</a>\n' +
    '  </small>\n' +
    '\n' +
    '  <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.6/angular.min.js"></script>\n' +
    '  <script src="elastic.js"></script>\n' +
    '  <script>\n' +
    '    angular.module(\'elasticDemo\', [\'monospaced.elastic\'])\n' +
    '      .controller(\'elasticDemoController\', [\'$scope\', function($scope){\n' +
    '        \'use strict\';\n' +
    '\n' +
    '        $scope.foo = \'This textarea is going to grow when you fill it with text. Just type a few more words in it and you will see. This textarea is going to grow when you fill it with text.\';\n' +
    '        $scope.bar = \'Elastic with a CSS transition. Try typing something...\';\n' +
    '\n' +
    '        $scope.submit = function(){\n' +
    '          $scope.bar = \'\';\n' +
    '        };\n' +
    '      }]);\n' +
    '  </script>\n' +
    '</body>\n' +
    '</html>');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/eventie/test.html',
    '<!doctype html>\n' +
    '<html>\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '\n' +
    '  <title>eventie test</title>\n' +
    '<style>\n' +
    'html, body { height: 100%; }\n' +
    '\n' +
    'body { font-family: sans-serif; }\n' +
    '\n' +
    '#output {\n' +
    '  font-size: 12px;\n' +
    '  border: 1px solid;\n' +
    '}\n' +
    '</style>\n' +
    '\n' +
    '<script src="eventie.js"></script>\n' +
    '<script>\n' +
    '( function() {\n' +
    '\n' +
    'var output;\n' +
    '\n' +
    'function addText( message ) {\n' +
    '  output.innerHTML += \'\\<br\\>\' + message;\n' +
    '}\n' +
    '\n' +
    'function Handler() {\n' +
    '  this.firstName = \'Ralph\';\n' +
    '}\n' +
    '\n' +
    'Handler.prototype.handleEvent = function( event ) {\n' +
    '  addText( this.firstName + \' handler on \' + event.type + \' at \' + (new Date()).getTime() );\n' +
    '};\n' +
    '\n' +
    'function onClick1() {\n' +
    '  addText(\'click 1 on \' + this.nodeName + \' at \' + (new Date()).getTime() );\n' +
    '}\n' +
    '\n' +
    'window.onload = function() {\n' +
    '  output = document.getElementById(\'output\');\n' +
    '  var hndlr = new Handler();\n' +
    '    \n' +
    '  eventie.bind( document.body, \'click\', onClick1 );\n' +
    '  eventie.bind( document.body, \'click\', hndlr );\n' +
    '  eventie.bind( document.getElementById(\'turn-off\'), \'click\', function() {\n' +
    '    eventie.unbind( document.body, \'click\', onClick1 );  \n' +
    '  }, false );\n' +
    '\n' +
    '  function onResize() {\n' +
    '    console.log(\'resize\');\n' +
    '  }\n' +
    '\n' +
    '  eventie.bind( window, \'resize\', onResize );\n' +
    '  eventie.unbind( window, \'resize\', onResize );\n' +
    '\n' +
    '  ( function() {\n' +
    '    var img = new Image();\n' +
    '    eventie.bind( img, \'load\', function( event ) {\n' +
    '      var isImg = event.target === img;\n' +
    '      addText(\'img event.target is img: \' + isImg );\n' +
    '    });\n' +
    '    var w = Math.floor( Math.random() * 200 ) + 400;\n' +
    '    var h = Math.floor( Math.random() * 200 ) + 400;\n' +
    '    img.src = \'http://lorempixel.com/\' + w + \'/\' + h;\n' +
    '  })();\n' +
    '\n' +
    '};\n' +
    '\n' +
    '})();\n' +
    '</script>\n' +
    '\n' +
    '</head>\n' +
    '<body>\n' +
    '\n' +
    '  <h1>eventie test</h1>\n' +
    '\n' +
    '  <button id="turn-off">Turn off click1 </button>\n' +
    '  <div id="output"></div>\n' +
    '\n' +
    '</body>\n' +
    '</html>\n' +
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/get-size/index.html',
    '<!doctype html>\n' +
    '<html>\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '\n' +
    '  <title>getSize</title>\n' +
    '\n' +
    '  <style>\n' +
    '    .container {\n' +
    '      width: 300px;\n' +
    '      height: 200px;\n' +
    '      margin-bottom: 10px;\n' +
    '      border: 1px solid;\n' +
    '      position: relative;\n' +
    '    }\n' +
    '\n' +
    '    .box {\n' +
    '      color: blue;\n' +
    '      background: pink;\n' +
    '    }\n' +
    '\n' +
    '    .border-box {\n' +
    '      -webkit-box-sizing: border-box;\n' +
    '         -moz-box-sizing: border-box;\n' +
    '              box-sizing: border-box;\n' +
    '    }\n' +
    '\n' +
    '    #box1, #box2 {\n' +
    '      width: 50%;\n' +
    '      height: 50%;\n' +
    '      border: 10px solid;\n' +
    '      padding: 10px;\n' +
    '    }\n' +
    '\n' +
    '    #box3, #box4 {\n' +
    '       width: 50%;\n' +
    '       height: 50%;\n' +
    '       border: 0px solid;\n' +
    '       margin: 10%;\n' +
    '       padding: 10px;\n' +
    '     }\n' +
    '\n' +
    '    #box5, #box6 {\n' +
    '       width: 100px;\n' +
    '       height: 100px;\n' +
    '       border: 10px solid;\n' +
    '       margin: 10%;\n' +
    '       padding: 5%;\n' +
    '     }\n' +
    '\n' +
    '    </style>\n' +
    '\n' +
    '</head>\n' +
    '<body>\n' +
    '\n' +
    '  <h1>getSize</h1>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box1" class="box">box1</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box2" class="box border-box">box2</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box3" class="box">box3</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box4" class="box border-box">box4</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box5" class="box">box5</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <div class="container">\n' +
    '    <div id="box6" class="box border-box">box6</div>\n' +
    '  </div>\n' +
    '\n' +
    '  <script src="get-size.js"></script>\n' +
    '\n' +
    '</body>\n' +
    '</html>\n' +
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/matches-selector/tests.html',
    '<!doctype html>\n' +
    '<html>\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '\n' +
    '  <title>matchesSelector tests</title>\n' +
    '\n' +
    '  <link rel="stylesheet" href="bower_components/qunit/qunit/qunit.css" />\n' +
    '\n' +
    '  <script src="bower_components/qunit/qunit/qunit.js"></script>\n' +
    '\n' +
    '</head>\n' +
    '<body>\n' +
    '\n' +
    '  <div id="alpha" class="item red"></div>\n' +
    '  <div id="beta" class="item blue"></div>\n' +
    '  <div id="gamma" class="item green"></div>\n' +
    '\n' +
    '  <div id="qunit"></div>\n' +
    '\n' +
    '<script src="matches-selector.js"></script>\n' +
    '<script src="tests.js"></script>\n' +
    '\n' +
    '</body>\n' +
    '</html>\n' +
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/get-size/test/index.html',
    '<!doctype html>\n' +
    '<html>\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '\n' +
    '  <title>Get Size Tests</title>\n' +
    '\n' +
    '  <link rel="stylesheet" href="../bower_components/qunit/qunit/qunit.css" />\n' +
    '  <link rel="stylesheet" href="tests.css" />\n' +
    '\n' +
    '  <script src="../bower_components/qunit/qunit/qunit.js"></script>\n' +
    '  <script src="../bower_components/get-style-property/get-style-property.js"></script>\n' +
    '  <script src="../get-size.js"></script>\n' +
    '  <script src="tests.js"></script>\n' +
    '\n' +
    '\n' +
    '</head>\n' +
    '<body>\n' +
    '\n' +
    '<h1>Get Size Tests</h1>\n' +
    '\n' +
    '<div id="ex1" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex2" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex3" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex4" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex5" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex6" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex7" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex8" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="ex9" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="hidden" class="container">\n' +
    '  <div class="box box1"></div>\n' +
    '  <div class="box box2"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="percent" class="container">\n' +
    '  <div class="box"></div>\n' +
    '</div>\n' +
    '\n' +
    '<div id="qunit"></div>\n' +
    '\n' +
    '</body>\n' +
    '</html>\n' +
    '');
}]);
})();

(function(module) {
try {
  module = angular.module('wall.partials');
} catch (e) {
  module = angular.module('wall.partials', []);
}
module.run(['$templateCache', function($templateCache) {
  $templateCache.put('libs/jquery-bridget/test/index.html',
    '<!doctype html>\n' +
    '<html>\n' +
    '<head>\n' +
    '  <meta charset="utf-8">\n' +
    '\n' +
    '  <title>Bridget tests</title>\n' +
    '\n' +
    '  <link rel="stylesheet" href="../components/qunit/qunit.css" />\n' +
    '  <style>\n' +
    '    body {\n' +
    '      font-family: sans-serif;\n' +
    '    }\n' +
    '\n' +
    '    .example {\n' +
    '      background: #EEE;\n' +
    '      border-radius: 5px;\n' +
    '    }\n' +
    '\n' +
    '  </style>\n' +
    '\n' +
    '</head>\n' +
    '<body>\n' +
    '\n' +
    '  <h1>Bridget tests</h1>\n' +
    '\n' +
    '  <div id="ex1" class="example"></div>\n' +
    '  <div id="ex2" class="example"></div>\n' +
    '\n' +
    '  <div id="qunit"></div>\n' +
    '\n' +
    '<script src="../components/qunit/qunit.js"></script>\n' +
    '<script src="../components/jquery/jquery.min.js"></script>\n' +
    '<script src="../jquery.bridget.js"></script>\n' +
    '<script src="nice-greeter.js"></script>\n' +
    '<script src="tests.js"></script>\n' +
    '\n' +
    '</body>\n' +
    '</html>\n' +
    '');
}]);
})();
